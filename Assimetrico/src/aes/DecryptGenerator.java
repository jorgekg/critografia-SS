package aes;

import java.io.File;
import java.io.FileInputStream;
import java.math.BigInteger;
import java.security.KeyFactory;
import java.security.PrivateKey;
import java.security.spec.RSAPrivateKeySpec;

import javax.crypto.Cipher;

//Criado pelo Jorge
public class DecryptGenerator {
	
	public void decryptGenerated() throws Exception {
		File file = new File("cifred.txt");
		FileInputStream in = new FileInputStream(file);
		byte[] textoCifrado = new byte[(int)file.length()];
		in.read(textoCifrado);
		in.close();
		byte[] signed = decrypt(textoCifrado);     
        System.out.println(new String(signed));
	}
	
	public byte[] decrypt(byte[] message) throws Exception {
		RSAPrivateKeySpec spec = new RSAPrivateKeySpec(
			new BigInteger("16355915802111338823720386765495895652536553347735895992827846151102519313166247893351775254567268987408998913662401359082562005652705089215586421941041992369351402863441151724565464436299353739496470978122996500412278501101090253658037070938691912645934402043234193226346850568048024800962579379887999122323993434707426706917977698593570344083458105302626227923010416610906231653440470861987450657204259880175956930093562446565765295964035506782125104871650123848827441058226359020931626663274003895292508134422565045330172846055355617224683019334671539468151499827534559300948875902651733059065703047869417734677839"),
			new BigInteger("4140826632110583849782087327969054132274692054040221345392673197416619626227236294711272335074539985643073530608458784349266350272207803840044706239922009512066137850530472701130509268460241958675640424020274927672010084231339388264555153287681404620616500582897321116492163886431372011193236142501208194418350311507720310594603296818728533976124100284165105687144685593483364464736981614263853197635941333169682433339757875058338915860676621091948844795886855879128288504989627809129858151222610677227818452702833572883878934992656580883876511538449846682578765255316289800038407903978585676160349931780464265636993")
		);
			
	    KeyFactory kf = KeyFactory.getInstance("RSA");
	    PrivateKey key = kf.generatePrivate(spec);
        Cipher cipher = Cipher.getInstance("RSA"); 
        cipher.init(Cipher.DECRYPT_MODE, key);  
        return cipher.doFinal(message);
    }
}
